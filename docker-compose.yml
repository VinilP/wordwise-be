version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: book-review-postgres
    environment:
      POSTGRES_DB: bookreview_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - book-review-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: book-review-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - book-review-network

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: book-review-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/bookreview_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key-for-development
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AWS_REGION: us-east-1
      S3_BUCKET: book-review-dev-assets
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
    networks:
      - book-review-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Backend (with hot reload)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: book-review-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/bookreview_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key-for-development
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AWS_REGION: us-east-1
      S3_BUCKET: book-review-dev-assets
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - book-review-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  book-review-network:
    driver: bridge